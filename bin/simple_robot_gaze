#!/usr/bin/python

"""

This file is part of FINITE STATE MACHINE BASED TESTING.

Copyright(c) <Florian Lier, Simon Schulz>
http://opensource.cit-ec.de/fsmt

This file may be licensed under the terms of the
GNU Lesser General Public License Version 3 (the ``LGPL''),
or (at your option) any later version.

Software distributed under the License is distributed
on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either
express or implied. See the LGPL for the specific language
governing rights and limitations.

You should have received a copy of the LGPL along with this
program. If not, go to http://www.gnu.org/licenses/lgpl.html
or write to the Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

The development of this software was supported by the
Excellence Cluster EXC 277 Cognitive Interaction Technology.
The Excellence Cluster EXC 277 is a grant of the Deutsche
Forschungsgemeinschaft (DFG) in the context of the German
Excellence Initiative.

Authors: Florian Lier, Simon Schulz
<flier, sschulz>@techfak.uni-bielefeld.de

"""

# STD IMPORTS
import os
import sys
import time
import signal
from optparse import OptionParser

# SELF IMPORTS
from srg.behavior import arbitration as a


def runner(_options):

    # Arbitration
    ar = a.Arbitration(_options.config, options.outscope)

    def signal_handler(sig, frame):
        print ">>> Exiting (signal %s)..." % str(sig)
        ar.request_stop()
        time.sleep(0.2)
        print ">>> Bye!"
        sys.exit(0)

    signal.signal(signal.SIGINT, signal_handler)

    while True:
        time.sleep(1)

if __name__ == '__main__':

    parser = OptionParser(usage="Usage: %prog [options]")
    parser.add_option("-o", "--outscope",
                      action="store",
                      dest="outscope",
                      default="/meka",
                      help=
                      "Set the HLRC target topic. This is the robot you need to control. [Default: /meka]")
    parser.add_option("-c", "--config",
                      action="store",
                      dest="config",
                      default=os.environ['HOME'] + "/.config/simplerobotgaze.yaml",
                      help="Location of the Simple Robot Gaze config file. [Default: ~/.config/simplerobotgaze.yaml]")
    parser.add_option("-l", "--loglevel",
                      action="store",
                      dest="loglevel",
                      default="info",
                      help="Set the logging level for console output. Available are info and debug. [Default: info]")

    (options, args) = parser.parse_args()

    runner(options)